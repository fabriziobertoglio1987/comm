diff --git a/node_modules/react-native/Libraries/Components/TextInput/TextInput.js b/node_modules/react-native/Libraries/Components/TextInput/TextInput.js
index a46efe0..bb7a669 100644
--- a/node_modules/react-native/Libraries/Components/TextInput/TextInput.js
+++ b/node_modules/react-native/Libraries/Components/TextInput/TextInput.js
@@ -206,6 +206,13 @@ export type TextContentType =
 type PasswordRules = string;
 
 type IOSProps = $ReadOnly<{|
+  /**
+   * If set, allows pasting of images for given threadID.
+   * The default value is NULL.
+   * @platform ios
+   */
+  allowImagePasteForThreadID?: ?string,
+
   /**
    * If `false`, disables spell-check style (i.e. red underlines).
    * The default value is inherited from `autoCorrect`.
diff --git a/node_modules/react-native/Libraries/Text/TextInput/Multiline/RCTUITextView.h b/node_modules/react-native/Libraries/Text/TextInput/Multiline/RCTUITextView.h
index 8f4526b..c1c5895 100644
--- a/node_modules/react-native/Libraries/Text/TextInput/Multiline/RCTUITextView.h
+++ b/node_modules/react-native/Libraries/Text/TextInput/Multiline/RCTUITextView.h
@@ -36,6 +36,7 @@ NS_ASSUME_NONNULL_BEGIN
 // The `caretHidden` property actually is not supported yet;
 // it's declared here only to conform to the interface.
 @property (nonatomic, assign) BOOL caretHidden;
+@property (nonatomic, copy, nullable) NSString *allowImagePasteForThreadID;
 
 @property (nonatomic, strong, nullable) NSString *inputAccessoryViewID;
 
diff --git a/node_modules/react-native/Libraries/Text/TextInput/Multiline/RCTUITextView.m b/node_modules/react-native/Libraries/Text/TextInput/Multiline/RCTUITextView.m
index a417cc1..1514171 100644
--- a/node_modules/react-native/Libraries/Text/TextInput/Multiline/RCTUITextView.m
+++ b/node_modules/react-native/Libraries/Text/TextInput/Multiline/RCTUITextView.m
@@ -180,8 +180,12 @@ - (void)setSelectedTextRange:(UITextRange *)selectedTextRange notifyDelegate:(BO
 
 - (void)paste:(id)sender
 {
-  [super paste:sender];
-  _textWasPasted = YES;
+  if ([UIPasteboard generalPasteboard].hasImages && _allowImagePasteForThreadID) {
+    [_textInputDelegate textInputImagePasted:_allowImagePasteForThreadID];
+  } else {
+    [super paste:sender];
+    _textWasPasted = YES;
+  }
 }
 
 - (void)setContentOffset:(CGPoint)contentOffset animated:(__unused BOOL)animated
@@ -268,6 +272,9 @@ - (BOOL)canPerformAction:(SEL)action withSender:(id)sender
     return NO;
   }
 
+  if (action == @selector(paste:) && [UIPasteboard generalPasteboard].hasImages) {
+    return (_allowImagePasteForThreadID != NULL);
+  }
   return [super canPerformAction:action withSender:sender];
 }
 
diff --git a/node_modules/react-native/Libraries/Text/TextInput/RCTBackedTextInputDelegate.h b/node_modules/react-native/Libraries/Text/TextInput/RCTBackedTextInputDelegate.h
index 3e1839b..8fe347e 100644
--- a/node_modules/react-native/Libraries/Text/TextInput/RCTBackedTextInputDelegate.h
+++ b/node_modules/react-native/Libraries/Text/TextInput/RCTBackedTextInputDelegate.h
@@ -32,6 +32,7 @@ NS_ASSUME_NONNULL_BEGIN
 - (void)textInputDidChange;
 
 - (void)textInputDidChangeSelection;
+- (void)textInputImagePasted:(NSString *)threadID;
 
 @optional
 
diff --git a/node_modules/react-native/Libraries/Text/TextInput/RCTBaseTextInputView.m b/node_modules/react-native/Libraries/Text/TextInput/RCTBaseTextInputView.m
index d619e5b..cac62d3 100644
--- a/node_modules/react-native/Libraries/Text/TextInput/RCTBaseTextInputView.m
+++ b/node_modules/react-native/Libraries/Text/TextInput/RCTBaseTextInputView.m
@@ -19,6 +19,8 @@
 #import <React/RCTTextAttributes.h>
 #import <React/RCTTextSelection.h>
 
+#import <MobileCoreServices/MobileCoreServices.h>
+
 @implementation RCTBaseTextInputView {
   __weak RCTBridge *_bridge;
   __weak id<RCTEventDispatcherProtocol> _eventDispatcher;
@@ -491,6 +493,46 @@ - (void)textInputDidChangeSelection
   });
 }
 
+- (void)textInputImagePasted:(NSString *)threadID
+{
+  NSFileManager *fileManager = [NSFileManager defaultManager];
+  UIPasteboard *clipboard = [UIPasteboard generalPasteboard];
+  NSData *imageData = [clipboard dataForPasteboardType:(NSString*)kUTTypeImage];
+  
+  UIImage *uiImage = [UIImage imageWithData:imageData];
+  
+  if (!imageData) {
+    RCTLog(@"Failed to get image from UIPasteboard.");
+    return;
+  }
+  
+  NSString *fileName = [@([imageData hash]) stringValue];
+  NSURL *tmpDirURL = [NSURL fileURLWithPath:NSTemporaryDirectory() isDirectory:YES];
+  
+  // We add the PNG file extension because EXImageLoader fails without it.
+  // Our code ignores file extensions and looks at magic numbers directly.
+  NSURL *fileURL = [[tmpDirURL URLByAppendingPathComponent:fileName] URLByAppendingPathExtension:@"png"];
+  NSString *fileDest = [fileURL path];
+  
+  if (![fileManager fileExistsAtPath:fileDest]) {
+    BOOL fileWritten = [imageData writeToFile:fileDest atomically:true];
+    if (!fileWritten) {
+      RCTLog(@"Failed to save image to temporary directory.");
+      return;
+    }
+  }
+  
+  NSDictionary *eventBody = @{
+    @"fileName": fileName,
+    @"filePath": fileDest,
+    @"height": @(uiImage.size.height),
+    @"width": @(uiImage.size.width),
+    @"threadID": threadID,
+  };
+  
+  [_eventDispatcher sendAppEventWithName:@"imagePasted" body:eventBody];
+}
+
 - (void)updateLocalData
 {
   [self enforceTextAttributesIfNeeded];
diff --git a/node_modules/react-native/Libraries/Text/TextInput/RCTBaseTextInputViewManager.m b/node_modules/react-native/Libraries/Text/TextInput/RCTBaseTextInputViewManager.m
index 34994ca..cd8322e 100644
--- a/node_modules/react-native/Libraries/Text/TextInput/RCTBaseTextInputViewManager.m
+++ b/node_modules/react-native/Libraries/Text/TextInput/RCTBaseTextInputViewManager.m
@@ -33,6 +33,7 @@ @implementation RCTBaseTextInputViewManager
 
 #pragma mark - Unified <TextInput> properties
 
+RCT_REMAP_VIEW_PROPERTY(allowImagePasteForThreadID, backedTextInputView.allowImagePasteForThreadID, NSString)
 RCT_REMAP_VIEW_PROPERTY(autoCapitalize, backedTextInputView.autocapitalizationType, UITextAutocapitalizationType)
 RCT_REMAP_VIEW_PROPERTY(autoCorrect, backedTextInputView.autocorrectionType, UITextAutocorrectionType)
 RCT_REMAP_VIEW_PROPERTY(contextMenuHidden, backedTextInputView.contextMenuHidden, BOOL)
